class Solution {
  public:
    void bfs(int src, vector<vector<int>>&adjList,vector<bool>&visited){
        queue<int>q;
        q.push(src);
         visited[src]=true;
        while(!q.empty()){
            auto front=q.front();
            q.pop();
            for(auto i:adjList[front]){
                if(!visited[i]){
                    q.push(i);
                    visited[i]=true;
                }
            }
        }
        
    }
    int numProvinces(vector<vector<int>> adj, int V) {
        vector<bool>visited(V,false);
        int cnt=0;
        vector<vector<int>>adjList(V+1);
        for(int i=1;i<=V;i++){
            for(int j=1;j<=V;j++ ){
                if(adj[i-1][j-1]==1){
                adjList[i].push_back(j);
                }
            }
        }
        for(int i=1;i<=V;i++){
            if(!visited[i]){
                bfs(i,adjList,visited);
                cnt++;
            }
        }
     return cnt;
    }
};
